@page "/ExaminationRecord"

@inject ISessionStorageService SessionStorage
@using Blazored.SessionStorage
@inject NavigationManager NavigationManager
@using Foundation.Dtos
@using Foundation.Services
@using Newtonsoft.Json
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Spinner
@inject IJSRuntime JS

<h3>Examination Record</h3>
<hr />
<SfSpinner @ref="spinnerObj" CssClass="custom-spinner"></SfSpinner>
<div class="jaw-selection mb-3">
    <label class="me-3">
        <input type="radio" name="jaw" value="Maxilla" @onchange="@(() => SelectedJaw = "Maxilla")" checked="@IsMaxillaSelected" />
        Maxilla
    </label>
    <label>
        <input type="radio" name="jaw" value="Mandible" @onchange="@(() => SelectedJaw = "Mandible")" checked="@IsMandibleSelected" />
        Mandible
    </label>
</div>
<hr />

@if (SelectedJaw == "Maxilla")
{
    @foreach (var tooth in TeethMaxilla)
    {
        <div class="tooth-row">
            <div class="tooth-col">
                <img src="/images/tooth.png" alt="ToothIcon" class="tooth-icon" />
                <div class="tooth-number">@tooth.ToothNumber</div>
            </div>

            @*  <div class="caries-section">
                <label class="me-2">Caries</label>
                <label class="me-1">YES <SfCheckBox @bind-Checked="@tooth.CariesYes" /></label>
                <label>NO <SfCheckBox @bind-Checked="@tooth.CariesNo" /></label>
            </div> *@

            <label class="me-2">Caries</label>
            <label class="me-1">
                YES <SfCheckBox @bind-Checked="@tooth.CariesYes" ValueChanged="@( (bool _) => OnCariesChanged(tooth, true) )" />
            </label>
            <label>
                NO <SfCheckBox @bind-Checked="@tooth.CariesNo" ValueChanged="@( (bool _) => OnCariesChanged(tooth, false) )" />
            </label>




            <div class="dropdown-section">
                <label>PE</label>
                <SfDropDownList TItem="PEList" TValue="string" Placeholder="Select Stage" DataSource="@LocalData" @bind-Value="@tooth.SelectedPE">
                    <DropDownListFieldSettings Value="ID" Text="Text"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>

            <div class="description-section">
                <SfTextArea @bind-Value="@tooth.Description" Width="500px" Placeholder="Detailed Description" CssClass="custom-description" Rows="3" />
            </div>
        </div>
        <hr />
    }
}
else if (SelectedJaw == "Mandible")
{
    @foreach (var tooth in TeethMandible)
    {
        <div class="tooth-row">
            <div class="tooth-col">
                <img src="/images/tooth.png" alt="ToothIcon" class="tooth-icon" />
                <div class="tooth-number">@tooth.ToothNumber</div>
            </div>

            <div class="caries-section">
                <label class="me-2">Caries</label>
                <label class="me-1">YES <SfCheckBox @bind-Checked="@tooth.CariesYes" /></label>
                <label>NO <SfCheckBox @bind-Checked="@tooth.CariesNo" /></label>
            </div>

            <div class="dropdown-section">
                <label>PE</label>
                <SfDropDownList TItem="PEList" TValue="string" Placeholder="Select Stage" DataSource="@LocalData" @bind-Value="@tooth.SelectedPE">
                    <DropDownListFieldSettings Value="ID" Text="Text"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>

            <div class="description-section">
                <SfTextArea @bind-Value="@tooth.Description" Width="500px" Placeholder="Detailed Description" CssClass="custom-description" Rows="3" />
            </div>
        </div>
        <hr />
    }
}

<div class="text-center mt-4">
    <SfButton CssClass="e-primary" OnClick="SubmitReport">Submit Report</SfButton>
</div>

@code { 
    [Parameter]
    [SupplyParameterFromQuery]
    public string PatientId { get; set; }
    private SfSpinner spinnerObj;
    private string SelectedJaw { get; set; } = "Maxilla";
    private bool IsMaxillaSelected => SelectedJaw == "Maxilla";
    private bool IsMandibleSelected => SelectedJaw == "Mandible";

    public class PEList
    {
        public string ID { get; set; }
        public string Text { get; set; }
    }

  
    List<PEList> LocalData = new()
    {
        new PEList() { ID = "I", Text = "Stage I" },
        new PEList() { ID = "II", Text = "Stage II" },
        new PEList() { ID = "III", Text = "Stage III" },
        new PEList() { ID = "IV", Text = "Stage IV" }
    };

    List<ToothInfoDto> TeethMaxilla = new()
    {
        new ToothInfoDto { ToothNumber = 18 }, new ToothInfoDto { ToothNumber = 17 },
        new ToothInfoDto { ToothNumber = 16 }, new ToothInfoDto { ToothNumber = 15 },
        new ToothInfoDto { ToothNumber = 14 }, new ToothInfoDto { ToothNumber = 13 },
        new ToothInfoDto { ToothNumber = 12 }, new ToothInfoDto { ToothNumber = 11 },
        new ToothInfoDto { ToothNumber = 21 }, new ToothInfoDto { ToothNumber = 22 },
        new ToothInfoDto { ToothNumber = 23 }, new ToothInfoDto { ToothNumber = 24 },
        new ToothInfoDto { ToothNumber = 25 }, new ToothInfoDto { ToothNumber = 26 },
        new ToothInfoDto { ToothNumber = 27 }, new ToothInfoDto { ToothNumber = 28 }
    };

    List<ToothInfoDto> TeethMandible = new()
    {
        new ToothInfoDto { ToothNumber = 48 }, new ToothInfoDto { ToothNumber = 47 },
        new ToothInfoDto { ToothNumber = 46 }, new ToothInfoDto { ToothNumber = 45 },
        new ToothInfoDto { ToothNumber = 44 }, new ToothInfoDto { ToothNumber = 43 },
        new ToothInfoDto { ToothNumber = 42 }, new ToothInfoDto { ToothNumber = 41 },
        new ToothInfoDto { ToothNumber = 31 }, new ToothInfoDto { ToothNumber = 32 },
        new ToothInfoDto { ToothNumber = 33 }, new ToothInfoDto { ToothNumber = 34 },
        new ToothInfoDto { ToothNumber = 35 }, new ToothInfoDto { ToothNumber = 36 },
        new ToothInfoDto { ToothNumber = 37 }, new ToothInfoDto { ToothNumber = 38 }
    };

    private void OnCariesChanged(ToothInfoDto tooth, bool isYes)
    {
        tooth.CariesYes = isYes;
        tooth.CariesNo = !isYes;
    }

    private async Task SubmitReport()
    {
        var report = new PatientExaminationRecordDto
            {
                MaxillaTeeth = TeethMaxilla,
                MandibleTeeth = TeethMandible,
                PatientId = PatientId
            };
        await SessionStorage.SetItemAsync("PatientExaminationRecord", report);
        NavigationManager.NavigateTo($"WordProcessor?PatientId={PatientId}");       
    }
}


<style>
    .tooth-row {
        display: flex;
        align-items: flex-start;
        margin-bottom: 1rem;
        gap: 1rem;
    }

    .tooth-col {
        text-align: center;
        min-width: 50px;
    }

    .tooth-icon {
        width: 30px;
        height: auto;
        margin-bottom: 4px;
    }

    .tooth-number {
        font-weight: bold;
    }

    .caries-section {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        min-width: 150px;
    }

    .dropdown-section {
        min-width: 120px;
    }

    .description-section {
        flex: 1;
    }

    .custom-description {
        background-color: #f1f8e9;
    }

    .jaw-selection {
        display: flex;
        gap: 1rem;
    }
</style>
